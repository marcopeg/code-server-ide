Description: >
    cerberus - queue postgres db

Parameters:

    StackName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    SecurityGroup:
        Type: String
        Description: Security group to apply to the instances

    Subnets:
        Description: Choose which subnets this ECS cluster should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    ImageId:
        Description: Which image to use
        Type: String
    
    InstanceType:
        Description: Which kind of EC2 machine to use
        Type: String

    KeyPairName:
        Description: The SSH KeyPair Name to allow access
        Type: AWS::EC2::KeyPair::KeyName

Resources:

    NetworkInterface:
        Type: AWS::EC2::NetworkInterface
        Properties:
            SubnetId: !Select [ 0, !Ref Subnets ]
            GroupSet:
                - !Ref SecurityGroup
            SourceDestCheck: true

    EC2Instance:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: !Ref ImageId
            InstanceType: !Ref InstanceType
            KeyName: !Ref KeyPairName
            NetworkInterfaces:
                - NetworkInterfaceId: !Ref NetworkInterface
                  DeviceIndex: 0
            UserData:
                Fn::Base64:
                    Fn::Sub: |
                        #!/bin/bash
                        echo "foobar" >> /home/ubuntu/foobar
                        export VSCODE_DNS="e1.learnjs.today"
                        export VSCODE_PASSWORD="xxx"
                        export VSCODE_EMAIL="marco.pegoraro+letsencrypt@gmail.com"
                        export CLOUDFLARE_API_KEY="xx"
                        export CLOUDFLARE_ZONE_ID="xx"
                        git clone https://github.com/marcopeg/code-server-ide.git /home/ubuntu/vscode-ide
                        /home/ubuntu/vscode-ide/ec2-ubuntu-setup.sh
            Tags:
                - Key: Name
                  Value: !Sub "${StackName}-box"

# Outputs:

#     PrivateIp:
#         Value: !GetAtt EC2Instance.PrivateIp

