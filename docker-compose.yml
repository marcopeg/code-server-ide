version: "3.7"

services:
  traefik:
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.csi.loadbalancer.server.port=1337"
      - "traefik.http.routers.csi-traefik-http.rule=Host(`127.0.0.11`)"
      
      - "traefik.http.routers.csi-traefik-https.tls=true"
      - "traefik.http.routers.csi-traefik-https.service=api@internal"
      - "traefik.http.routers.csi-traefik-https.tls.certresolver=myresolver"
      - "traefik.http.routers.csi-traefik-https.entrypoints=websecure"
      - "traefik.http.routers.csi-traefik-https.rule=Host(`traefik.${CODE_SERVER_DNS}`)"

      - "traefik.http.routers.csi-traefik-https.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/basic-auth/.htpasswd"
    command:
      # Exposes Traefik dashboard
      # (comment this to avoid useless security risks)
      - "--api.dashboard=true"

      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=web"
      - "--entrypoints.web.address=:80"

      # Force redirect http->https for every service
      # (comment to let each service definition the responsability over this detail)
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${CODE_SERVER_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
#      - "--log.level=DEBUG"
#      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${CODE_SERVER_CWD}/data/letsencrypt:/letsencrypt
      - ${CODE_SERVER_CWD}/data/.htpasswd:/basic-auth/.htpasswd
      - /var/run/docker.sock:/var/run/docker.sock:ro
    image: traefik:v2.2
    network_mode: host
    restart: on-failure

  nginx:
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.csi-nginx.loadbalancer.server.port=8082"

      # Configure basic HTTP mapping
      # - "traefik.http.routers.csi-nginx-http.entrypoints=web"
      # - "traefik.http.routers.csi-nginx-http.rule=Host(`${CODE_SERVER_DNS}`)"

      # Configure HTTPS mapping with automatic Letsencrypt certificate management
      - "traefik.http.routers.csi-nginx-https.tls=true"
      - "traefik.http.routers.csi-nginx-https.tls.certresolver=myresolver"
      - "traefik.http.routers.csi-nginx-https.entrypoints=websecure"
      - "traefik.http.routers.csi-nginx-https.rule=Host(`${CODE_SERVER_DNS}`)"

      # Configure automatic redirect HTTP->HTTPS
      # - "traefik.http.routers.csi-nginx-http.middlewares=csi-nginx-redirect"
      # - "traefik.http.middlewares.csi-nginx-redirect.redirectscheme.permanent=true"
      # - "traefik.http.middlewares.csi-nginx-redirect.redirectscheme.scheme=https"
      
      # Simple Auth
      # (this screws up Code Server on iPad)
      # - "traefik.http.middlewares.vscode-nginx-auth.basicauth.usersfile=/basic-auth/.htpasswd"
      # - "traefik.http.routers.vscode-nginx-https.middlewares=vscode-nginx-auth"
    volumes:
      - ${CODE_SERVER_CWD}/nginx.conf:/etc/nginx/conf.d/default.conf
      - ${CODE_SERVER_CWD}/data/.htpasswd:/basic-auth/.htpasswd
    image: nginx:alpine
    network_mode: host
    restart: on-failure
