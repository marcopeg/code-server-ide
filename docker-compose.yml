version: "3.7"

services:
  traefik:
    command:
      # Exposes Traefik dashboard
      # (comment this to avoid useless security risks)
      - "--api.dashboard=true"

      # Docker Integration
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=web"

      # Entry Points
      - "--entrypoints.http80.address=:80"
      - "--entrypoints.http443.address=:443"
      
      # SSL - Letsencrypt integration
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http80"
      - "--certificatesresolvers.letsencrypt.acme.email=${CODE_SERVER_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"

      # Force redirect http->https for every service
      # (comment to let each service definition the responsability over this detail)
      # - "--entrypoints.http80.http.redirections.entrypoint.to=http443"
      # - "--entrypoints.http80.http.redirections.entrypoint.scheme=https"

#      - "--log.level=DEBUG"
#      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${CODE_SERVER_CWD}/data/letsencrypt:/letsencrypt
      - ${CODE_SERVER_CWD}/data/.htpasswd:/basic-auth/.htpasswd
      - /var/run/docker.sock:/var/run/docker.sock:ro
    image: traefik:v2.2
    network_mode: host
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.csi.loadbalancer.server.port=1337"
      - "traefik.http.routers.csi-traefik-http.rule=Host(`127.0.0.11`)"

      - "traefik.http.middlewares.csi-traefik-stripprefix.stripprefix.prefixes=/traefik"
      - "traefik.http.middlewares.csi-basic-auth.basicauth.usersfile=/basic-auth/.htpasswd"
      - "traefik.http.middlewares.csi-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.csi-redirect.redirectscheme.permanent=true"
      
      - "traefik.http.routers.csi-traefik-https.tls=true"
      - "traefik.http.routers.csi-traefik-https.service=api@internal"
      - "traefik.http.routers.csi-traefik-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.csi-traefik-https.entrypoints=http443"
      - "traefik.http.routers.csi-traefik-https.rule=Host(`${CODE_SERVER_DNS}`) && (PathPrefix(`/traefik`) || PathPrefix(`/api`))"
      - "traefik.http.routers.csi-traefik-https.middlewares=csi-basic-auth,csi-traefik-stripprefix"
  
  code-server:
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.csi-code-server.loadbalancer.server.port=40002"

      # Configure basic HTTP mapping
      - "traefik.http.routers.csi-code-server--80.entrypoints=http80"
      - "traefik.http.routers.csi-code-server--80.middlewares=csi-redirect"
      - "traefik.http.routers.csi-code-server--80.rule=Host(`${CODE_SERVER_DNS}`)"

      # Configure HTTPS mapping with automatic Letsencrypt certificate management
      - "traefik.http.routers.csi-code-server--443.tls=true"
      - "traefik.http.routers.csi-code-server--443.entrypoints=http443"
      - "traefik.http.routers.csi-code-server--443.tls.certresolver=letsencrypt"
      - "traefik.http.routers.csi-code-server--443.rule=Host(`${CODE_SERVER_DNS}`) && PathPrefix(`/`)"
      
      # Simple Auth
      # (this screws up Code Server on iPad)
      # - "traefik.http.routers.csi-code-server--443.middlewares=csi-basic-auth"
    image: marcopeg/nginx-proxy:0.0.2
    environment:
     - NGINX_PORT=40002
     - NGINX_UPSTREAM_PORT=40001
    network_mode: host
    restart: on-failure
