---
# tasks file for ansible-role-install-nvm-ubuntu
- include_vars: "main.yml"

- name: "Gather facts"
  setup:    # equivalent to "gather_facts: yes"

- name: "Install NVM dependencies"
  include_role:
    name: itnok.manage_pkg_ubuntu
  vars:
    manage_pkg_app:
      - "git"
      - "curl"
      - "libssl-dev"
      - "build-essential"

- name: "Find latest NVM release available"
  shell: >
    git ls-remote --tags https://github.com/nvm-sh/nvm.git | awk '{print $2}' | sed 's~refs/tags/~~g' | grep -ve '[\^\{\}]' | sort -V | tail -n1
  register: latest_nvm_release
  changed_when: no
  when: install_nvm == "latest"

- name: "Use real NVM release version for 'latest'"
  set_fact:
    install_nvm_version: "{{ latest_nvm_release.stdout|default(install_nvm) }}"

- name: "Prepare to automagically source NVM in ~/.bashrc"
  blockinfile:
    path: "~/.bashrc"
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  become: yes
  become_user: "{{ install_nvm_user }}"

- name: "Install NVM"
  shell: >
    curl -o- -sL https://raw.githubusercontent.com/nvm-sh/nvm/{{ install_nvm_version }}/install.sh | bash
  args:
    warn: no
  become: yes
  become_user: "{{ install_nvm_user }}"

- name: "Install node {{ install_nvm_node }}"
  shell: >
    source ~/.nvm/nvm.sh && nvm install {{ install_nvm_node }} 2>&1
  args:
    executable: "/bin/bash"
  register: install_nvm_result
  changed_when: '"is already installed." not in install_nvm_result.stdout'
  become: yes
  become_user: "{{ install_nvm_user }}"

- name: "Check if {{ install_nvm_node }} is the current default version"
  shell: >
    source ~/.nvm/nvm.sh && nvm ls | grep -e 'default -> {{ install_nvm_node }}'
  args:
    executable: "/bin/bash"
  register: install_nvm_check_default
  changed_when: no
  ignore_errors: yes
  become: yes
  become_user: "{{ install_nvm_user }}"

- name: "Set default node version to {{ install_nvm_node }}"
  shell: >
    source ~/.nvm/nvm.sh && nvm alias default {{ install_nvm_node }}
  args:
    executable: "/bin/bash"
  when: install_nvm_check_default.rc == 1
  become: yes
  become_user: "{{ install_nvm_user }}"
